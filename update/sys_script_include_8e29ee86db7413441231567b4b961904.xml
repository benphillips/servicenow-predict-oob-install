<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_na_astound_predi.Logs</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>Logs</name>
        <script><![CDATA[var Logs = Class.create();
Logs.prototype = {
	initialize: function(){},
    log: function(current,previous) {
	  gs.debug("Astound Events: Logs: initializing");

	  //queue Astound Logsging event
	  try {
		var targetField = gs.getProperty("x_na_astound_predi.target.1.field");
		var r = new sn_ws.RESTMessageV2('PredictLogs', 'post');
		var listeningArray = [];
		listeningArray.push("x_na_astound_predi_"+targetField);
		listeningArray.push(targetField);
		listeningArray.push("state");
		listeningArray.push("assignment_group");
		listeningArray.push("x_na_astound_predi_"+targetField+"_inserted");

		var isInserted = current["x_na_astound_predi_"+targetField+"_inserted"];
		var predictMode = "";
		if(current.operation() == "insert" && isInserted == "true")
			predictMode = "automatic";

		if(current.operation() == "update" && current[targetField].changes() && (current["x_na_astound_predi_"+targetField] == current[targetField]))
			predictMode = "interactive";

		var LogsObj = {
			"instance":        gs.getProperty('instance_name'),
			"sys_mod_count":   current.getValue('sys_mod_count'),
			"externalId":      current.getUniqueValue(),
			"table":           current.getTableName(),
			"predict_mode":    predictMode,
			"contact_type":    current.getValue("contact_type"),
			"fields": {}
		};

		for(var i = 0; i < listeningArray.length; i++) {
		  //iterate and build an object out of each monitored field.
		  var o = {}; 
		  o.priorValue            = previous.getValue(listeningArray[i]);
		  o.newValue              = current.getValue(listeningArray[i]);
		  o.priorDisplayValue     = previous.getDisplayValue(listeningArray[i]);
		  o.newDisplayValue       = current.getDisplayValue(listeningArray[i]);
		  o.createdOn             = current.getValue("sys_created_on");
		  o.createdBy             = current.getValue("sys_created_by");
		  o.updatedOn             = current.getValue("sys_updated_on");
		  o.updatedBy             = current.getValue("sys_updated_by");
		  o.updatedByDisplayValue = current.getDisplayValue("sys_updated_by");
		  LogsObj.fields[listeningArray[i]] = o; //push the string of the name into our LogsObj. 
		}
		r.setRequestBody(global.JSON.stringify(LogsObj));
		var response = r.executeAsync();
		var responseBody = response.getBody();
		var httpStatus = response.getStatusCode();

		gs.debug("Astound Events: Logs: post to endpoint: " + r.getEndpoint() + "\n" + 
			"getRequestBody " + r.getRequestBody() + "\n" + 
			"RESULT: HTTP response: " + httpStatus + "\n" +
			"responseBody: \n" + responseBody);

		if (httpStatus != 204) {
		  gs.error("Astound Events: Logs: There was an error Logsging an event to Astound for incident {0}", current.getDisplayValue());
		}
	  } catch(err) {
		gs.error("Astound Events: Logs: Error: Astound Category Change Logger business rule: error posting: \n" + err);
	  }
    },

    type: 'Logs'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>ben.phillips</sys_created_by>
        <sys_created_on>2018-03-13 22:39:56</sys_created_on>
        <sys_id>8e29ee86db7413441231567b4b961904</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Logs</sys_name>
        <sys_package display_value="Astound Predict" source="x_na_astound_predi">b8af7751db989b00bfa8d001cf961929</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Astound Predict">b8af7751db989b00bfa8d001cf961929</sys_scope>
        <sys_update_name>sys_script_include_8e29ee86db7413441231567b4b961904</sys_update_name>
        <sys_updated_by>ben.phillips</sys_updated_by>
        <sys_updated_on>2018-04-03 20:19:54</sys_updated_on>
    </sys_script_include>
</record_update>
